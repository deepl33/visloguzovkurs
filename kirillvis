# МИНИСТЕРСТВО ОБРАЗОВАНИЯ, НАУКИ И МОЛОДЕЖНОЙ ПОЛИТИКИ РЕСПУБЛИКИ КОМИ

Государственное профессиональное образовательное учреждение "Сыктывкарский политехнический техникум"

## Курсовая работа

Тема: База данных для учета домашних финансов

 Срок представления работы к защите: 15 ноября 2024 года. 

Профессия/специальность

09.02.07 "Информационные системы и программирование" 

Выполнил
Вислогузов Кирилл Александрович

Дневная, 4 курс, 414 группа

"11" ноября 2024г.

Руководитель

Пунгин И.В.

__________________________________________
"11" ноября 2024г.

Сыктывкар 2024

## Содержание
## Введение

Актуальность темы:
1. Управление личными финансами: В условиях экономической нестабильности и растущих цен людям все сложнее управлять своими финансами. Эффективный учет доходов и расходов помогает избежать финансовых затруднений.
2. Рост интереса к финансовой грамотности: Современное общество становится более осведомленным о важности финансового планирования. Многие люди стремятся улучшить свои навыки в этом направлении, что увеличивает спрос на инструменты для учета.
3. Технологические инновации: Развитие технологий, особенно в области мобильных приложений и веб-сервисов, делает создание и использование базы данных более доступным и удобным. Это создает возможности для автоматизации учета и анализа финансов.
4. Персональные бюджеты: Базы данных позволяют пользователям вести персональные бюджеты, что способствует улучшению самоконтроля и планирования финансов.
5. Сохранение истории финансовых операций: Хранение данных о финансовых операциях может помочь в анализе расходов и доходов за длительный период, позволяя выявить тенденции и области для оптимизации.

Цели работы:
1.Разработка базы данных: Создать эффективную структуру базы данных для учета домашних финансов, которая будет включать все необходимые таблицы и связи между ними.
2.Обеспечение удобного интерфейса: Разработать пользовательский интерфейс для ввода и анализа финансовых данных, который будет понятен и доступен для широкой аудитории.
3.Анализ данных: Реализовать функции по анализу и визуализации данных, чтобы пользователи могли легко отслеживать свои финансовые потоки и делать выводы на основе собранной информации.

Задачи работы:
1.Исследование существующих систем учета домашних финансов.
2.Определение функциональных требований к базе данных.
3.Проектирование структуры базы данных с учетом выбранных моделей данных.
4.Разработка интерфейса для взаимодействия пользователя с базой данных.
5.Тестирование и отладка системы для обеспечения корректной работы.
6.Предоставление рекомендаций по использованию базы данных в ежедневной практике.

Эти задачи помогут не только создать функциональную базу данных, но и повысить общую эффективность работы

 ## 1.Анализ предметной области. Постановка задачи.
 ## 1.1. Описание предметной области и функции решаемых задач.
Предметная область базы данных учета домашних финансов включает в себя управление личными финансами, где пользователи могут отслеживать свои доходы и расходы, управлять бюджетом и анализировать финансовое состояние. Основные функции системы:

- Ввод данных: Пользователи могут вводить данные о своих финансовых операциях — доходах и расходах.
- Категоризация операций: Возможность присваивать операции определенные категории (например, "Продукты", "Коммунальные услуги", "Дополнительный заработок").
- Отчеты: Генерация отчетов для анализа финансового состояния (например, отчет за месяц, отчет по категориям расходов).
- Визуализация данных: Графическое представление данных в виде диаграмм и графиков для наглядного анализа.
- Бюджетирование: Установка лимитов на расходы в разных категориях, а также получение уведомлений о превышении бюджета.
- Исторический учет: Хранение и доступ к истории финансовых операций для анализа динамики изменения финансов.

## 1.2. Перечень входных данных

Входные данные, которые должны быть предоставлены пользователем для функционирования системы:

- Дата операции: Дата, когда была проведена финансовая операция.
- Сумма: Сумма дохода или расхода.
- Тип операции: Тип операции (доход или расход).
- Категория: Категория, к которой относится операция (например, "Еда", "Транспорт", "Заработная плата").
- Описание: Дополнительная информация о транзакции (по желанию).
- Метод платежа: Метод, с помощью которого была произведена операция (наличные, карта, электронные деньги и т.д.).

## 1.3. Перечень выходных данных

Выходные данные, которые система предоставляет пользователю:

- Ежемесячные отчеты: Финансовые отчеты за выбранный период, содержащие информацию о доходах, расходах и остатке денежных средств.
- Графики и диаграммы: Визуальные представления данных (например, "Распределение расходов по категориям", "Динамика доходов и расходов").
- Анализ бюджета: Информация о соблюдении бюджета, включая предупреждения о превышении установленных лимитов.
- История операций: Список всех введенных финансовых операций с возможностью фильтрации и поиска.
- Экспорт данных: Возможность экспортировать данные в формате CSV или PDF.

## 1.4. Ограничения предметной области

Ограничения, которые могут возникнуть в процессе разработки и использования системы:

- Безопасность данных: При обработке и хранении личных финансовых данных необходимо обеспечить защиту информации, чтобы предотвратить утечку или доступ неавторизованных пользователей.
- Совместимость: База данных должна быть совместима с различными устройствами (мобильными, настольными) и операционными системами.
- Проведение расчетов: Корректность расчетов и учет всех финансовых операций необходимо проверять с учетом налоговых и законодательных норм (например, при наличии налоговых обязательств).
- Зависимость от ввода данных: Точность анализа финансов зависит от правильности и своевременности ввода пользователем данных о расходах и доходах.

## 1.5. Взаимодействие с другими программами

Система учета домашних финансов может взаимодействовать с другими программами и сервисами:

- Банковские приложения: Интеграция с банковскими API для автоматического импорта данных о транзакциях с банковских счетов.
- Приложения для учета времени: Взаимодействие с приложениями, которые отслеживают время, если пользователь хочет учитывать затраты на основе времени (например, для расчетов по фрилансу).
- Системы отчетности и анализа: Возможность экспорта данных для дальнейшего анализа в профессиональные финансовые программы или инструменты (например, Microsoft Excel, Google Sheets).
- Мобильные приложения: Создание мобильного приложения для быстрого доступа к данным и ввода финансовых операций на ходу. 

## 2.Инфологическая (концептуальная) модель базы данных.
## 2.1. Выделение информационных объектов
В рамках базы данных учета домашних финансов можно выделить основные информационные объекты:

1. Пользователь
   - Содержит данные о пользователе системы, который ведет учет финансов.
2. Операция
   - Представляет собой запись о конкретной финансовой операции (доход или расход).
3. Категория
   - Указывает на категорию, к которой относится операция (например, "Еда", "Транспорт").
4. Метод платежа
   - Указывает способ, с помощью которого была совершена операция (наличные, карта, электронные деньги и т.д.).
5. Бюджет
   - Отражает запланированный бюджет пользователя по различным категориям.

## 2.2. Определение атрибутов объектов
Для каждого из выделенных информационных объектов необходимо определить атрибуты:

1. Пользователь
   - ID пользователя (уникальный идентификатор)
   - Имя
   - Email
   - Пароль (хранится в зашифрованном виде)

2. Операция
   - ID операции (уникальный идентификатор)
   - Дата операции
   - Сумма
   - Тип операции (доход/расход)
   - Описание
   - ID категории (внешний ключ)
   - ID метода платежа (внешний ключ)
   - ID пользователя (внешний ключ)

3. Категория
   - ID категории (уникальный идентификатор)
   - Название категории
   - Описание (по желанию, для пояснения)

4. Метод платежа
   - ID метода платежа (уникальный идентификатор)
   - Название метода (например, "Наличные", "Кредитная карта", "Электронные деньги")

5. Бюджет
   - ID бюджета (уникальный идентификатор)
   - ID категории (внешний ключ)
   - Запланированная сумма
   - Период (например, "месяц", "год")

## 2.3. Определение отношений и мощности отношений между объектами
Определение отношений между объектами включает в себя:

1. Пользователь — Операция
   - Один пользователь может иметь множество операций.
   - Тип отношения: 1 ко многим. 
   - Мощность: 1 (Пользователь) к N (Операции).

2. Операция — Категория
   - Каждая операция относится к одной категории, но одна категория может включать множество операций.
   - Тип отношения: 1 ко многим.
   - Мощность: 1 (Категория) к N (Операции).

3. Операция — Метод платежа
   - Каждая операция может использовать только один метод платежа, но один метод может быть использован множеством операций.
   - Тип отношения: 1 ко многим.
   - Мощность: 1 (Метод платежа) к N (Операции).

4. Категория — Бюджет
   - Каждая категория может иметь свой бюджет.
   - Тип отношения: 1 к 1 (один бюджет на одну категорию).
   - Мощность: 1 (Категория) к 1 (Бюджет). 

## 2.4. Построение концептуальной модели
На основе вышеуказанных объектов, атрибутов и отношений можно построить концептуальную модель, которая визуально демонстрирует взаимодействие между объектами. Эту модель можно изобразить, например, в виде ER-диаграммы (диаграммы "сущность-связь"). 

[Пользователь]
  | 1                            N
  |---------------------< [Операция]
  | N                              |
  |                                |
  | 1                            N  
[Категория] ---------------->  [Метод платежа]
  | 1
  |
  | 1
[Бюджет]

В этой диаграмме:
- Стрелки указывают направление отношений.
- Указана мощность (1 или N) на каждой стороне отношений.

## 3.Логическая структура БД.
Создание логической структуры базы данных (БД) для учета домашних финансов — это важный шаг для организации и управления финансовыми данными. Вот основные компоненты и таблицы, которые могут быть включены в такую БД:


    1.Пользователи (Users)
        user_id (PK) — уникальный идентификатор пользователя
        username — имя пользователя
        password — пароль (хранить в зашифрованном виде)
        email — электронная почта
        created_at — дата регистрации

    2.Категории (Categories)
        category_id (PK) — уникальный идентификатор категории
        user_id (FK) — идентификатор пользователя, которому принадлежит категория
        category_name — название категории (например, "Продукты", "Развлечения", "Транспорт")
        is_income — флаг, указывающий, является ли категория доходом или расходом

    3.Транзакции (Transactions)
        transaction_id (PK) — уникальный идентификатор транзакции
        user_id (FK) — идентификатор пользователя
        category_id (FK) — идентификатор категории
        amount — сумма транзакции (может быть отрицательной для расходов)
        transaction_date — дата транзакции
        description — описание транзакции (например, "Покупка в магазине")

    4.Бюджеты (Budgets)
        budget_id (PK) — уникальный идентификатор бюджета
        user_id (FK) — идентификатор пользователя
        category_id (FK) — идентификатор категории
        budget_amount — сумма бюджета для категории
        start_date — дата начала бюджета
        end_date — дата окончания бюджета

    5.Отчеты (Reports)
        report_id (PK) — уникальный идентификатор отчета
        user_id (FK) — идентификатор пользователя
        report_date — дата создания отчета
        total_income — общая сумма доходов
        total_expenses — общая сумма расходов
        net_savings — чистая экономия (доходы - расходы)

Связи между таблицами
Пользователи могут иметь несколько категорий.
Каждая категория может иметь множество транзакций.
Бюджеты связаны с категориями и пользователями.
Отчеты могут агрегировать данные из транзакций и бюджетов для анализа финансов.

Физическая структура базы данных (БД) учета домашних финансов включает в себя конкретные аспекты, касающиеся хранения данных, их организации и управления ими на уровне системы управления базами данных (СУБД). Давайте рассмотрим основные компоненты физической структуры, которые помогут вам реализовать БД для учета домашних финансов.

1. Выбор СУБД
Выберите подходящую СУБД в зависимости от ваших потребностей. Вот несколько популярных вариантов:



